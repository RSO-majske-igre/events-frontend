{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/participants": {
      "put": {
        "tags": [
          "participant-api"
        ],
        "summary": "Updates participant",
        "operationId": "updateParticipant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Participant with given UUID not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Participant updated"
          }
        }
      },
      "post": {
        "tags": [
          "participant-api"
        ],
        "summary": "Creates new participant",
        "operationId": "postParticipant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "201": {
            "description": "Participant created"
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "events-api"
        ],
        "summary": "Returns page of events",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page of data, starts with 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Results per page, default 25",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorting by field, default name",
            "required": false,
            "schema": {
              "type": "string",
              "default": "eventName"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Returns page of data"
          }
        }
      },
      "put": {
        "tags": [
          "events-api"
        ],
        "summary": "Updates event",
        "operationId": "updateEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Event with given UUID not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Event updated"
          }
        }
      },
      "post": {
        "tags": [
          "events-api"
        ],
        "summary": "Creates new event",
        "operationId": "postEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "201": {
            "description": "Event created"
          }
        }
      }
    },
    "/events/entries": {
      "post": {
        "tags": [
          "entries-api"
        ],
        "summary": "Creates or updates new entity",
        "operationId": "postEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "201": {
            "description": "Entity created or updated"
          }
        }
      }
    },
    "/participants/{id}": {
      "get": {
        "tags": [
          "participant-api"
        ],
        "summary": "Returns participant with given ID",
        "operationId": "getParticipantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID of participant",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Participant with given ID not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Returns participant"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "events-api"
        ],
        "summary": "Returns events with given ID",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID of event",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Event with given ID not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Returns event"
          }
        }
      }
    },
    "/events/entries/{id}": {
      "get": {
        "tags": [
          "entries-api"
        ],
        "summary": "Returns entity with given ID",
        "operationId": "getEntryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID of entity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Entity with given ID not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionApiModel"
                }
              }
            }
          },
          "200": {
            "description": "Returns entity"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ExceptionApiModel": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "string"
          },
          "exceptionMessage": {
            "type": "string"
          },
          "exceptionNo": {
            "type": "integer",
            "format": "int32"
          },
          "body": {
            "type": "object"
          }
        }
      },
      "ParticipantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "dormId": {
            "type": "string",
            "format": "uuid"
          },
          "dormName": {
            "type": "string"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressCity": {
            "type": "string"
          },
          "addressPostalCode": {
            "type": "string"
          }
        },
        "description": "ParticipantDto to be saved"
      },
      "EntryDto": {
        "required": [
          "accepted",
          "id",
          "paid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "paid": {
            "type": "boolean"
          },
          "accepted": {
            "type": "boolean"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantDto"
            }
          },
          "invoices": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Entity to be saved"
      },
      "EventDto": {
        "required": [
          "description",
          "eventName",
          "fee",
          "id",
          "locationName",
          "startTime",
          "teamDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "eventName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "fee": {
            "type": "number"
          },
          "teamDescription": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "locationId": {
            "type": "string",
            "format": "uuid"
          },
          "locationName": {
            "type": "string"
          },
          "locationUrl": {
            "type": "string"
          },
          "geoLat": {
            "type": "string"
          },
          "geoLon": {
            "type": "string"
          },
          "entries": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntryDto"
            }
          },
          "results": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResultDto"
            }
          }
        },
        "description": "EventDto to be saved"
      },
      "EventResultDto": {
        "required": [
          "entry",
          "eventId",
          "id",
          "place",
          "points"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "place": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "entry": {
            "$ref": "#/components/schemas/EntryDto"
          }
        }
      }
    }
  }
}
